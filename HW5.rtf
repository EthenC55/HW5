{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
//Ethen Campos\
//HW5-COP2000-EthenCampos\
//This program will choose a winner by guessing the correct number.\
\
#include <iostream>\
#include <iomanip>\
#include <cstdlib>\
#include <string>\
#include <ctime>\
\
using namespace std;\
\
void instructions();\
int beginGame(int[]);\
void displayBoard(int board[][3]);\
bool testWinner(int, int, int[]);\
\
int main()\
\{\
    int board_1[4][3] = \{ 38, 11, 83,\
                         15, 6, 33,\
                         10, 2, 20,\
                         86, 0, 95\};\
\
	int board_2[4][3] = \{ 28, 10, 55,\
                         89, 17, 98,\
                         22, 4, 31,\
                         69, 0, 78\};\
\
	int board_3[4][3] = \{ 90, 9, 45,\
                         66, 12, 48,\
                         34, 7, 70,\
                         44, 0, 26\};\
\
	int ansBoard[3] = \{ 14,15,8 \};\
	int usedBoards[3] = \{0,0,0\};\
	int userInput, number_wins = 0, guesses = 0, boardNumber;\
	int board[4][3];\
    instructions();\
    do\
    \{\
        beginGame(usedBoards);\
        boardNumber = beginGame(usedBoards);\
        switch(boardNumber)\{\
            case 0:\
                   displayBoard(board_1);\
                   break;\
            case 1:\
                   displayBoard(board_2);\
                   break;\
            case 2:\
                   displayBoard(board_3);\
                   break;\
        	\}\
\
        for (int i = 1; i < 4; i++)\
        \{\
            cout << endl << "Enter your guess or zero to exit";\
        	cin >> userInput;\
        	int ans = userInput;\
\
        	if (userInput == 0)\{\
            cout << endl << "Exiting..";\
            return 0;\
        	\}\
\
        	else\{\
        		while (userInput < 0)\{\
        				cout << endl << "Please enter a valid value";\
        				cin >> userInput;\
        				\}\
        		\}\
\
            testWinner(ans, boardNumber, ansBoard);\
           if (testWinner(ans, boardNumber, ansBoard) == true)\
            \{\
				switch (boardNumber)\
				\{\
				case 0:\
					number_wins++;\
					usedBoards[0] =  1 ;\
					break;\
				case 1:\
					number_wins++;\
					usedBoards[1] =  1 ;\
					break;\
				case 2:\
					number_wins++;\
					usedBoards[2] =  1 ;\
			   \}\
\
			   if ((usedBoards[0] == 0) || (usedBoards[1] == 0) || (usedBoards[2] == 0))\
               \{\
                    cout << endl << "Do you want to play again or exit (0)";\
                cin >> userInput;\
                if (userInput == 0)\{\
                    cout << endl << "Exiting..";\
                    return 0;\
                \}\
                else\
                \{\
                    while (userInput < 0)\
                \{\
                    cout << endl << "Please enter a valid value";\
                    cin >> userInput;\
                \}\
\
                if (userInput != 0)\
                \{\
                    beginGame(usedBoards);\
                \}\
                \}\
               \}\
               break;\
\
            \}\
\
            else\
            \{\
                    guesses++;\
                    cout << endl << "Please try again, that was incorrect";\
                    cin >> userInput;\
            \}\
        \}\
\
                if (guesses > 3)\
                \{\
                    cout << endl << "Do you want to play again?. 1 to play again, 0 to exit";\
                    cin >> userInput;\
                    if (userInput == 0)\{\
                    cout << endl << "Exiting..";\
                    return 0;\
                    \}\
\
                    else\{\
\
                    while (userInput < 0)\
                    \{\
                    cout << endl << "Please enter a valid value";\
                    cin >> userInput;\
                    \}\
\
                    \}\
\
                    if (userInput != 0)\
                    \{\
                        main();\
                    \}\
                \}\
\
    \}while (number_wins < 3);\
        cout << endl << "You are the number guessing Champion !!";\
		return 0;\
\}\
\
void instructions()\
\{\
	cout << "*****************************************************************\\n";\
	cout << "MISSING NUMBERS GAME\\n";\
	cout << "A fun brain game
\f1 \'85\'5c
\f0 n";\
	cout << "Please Enter a whole number to guess the missing number
\f1 \'85\'5c
\f0 n";\
	cout << "Program Developed by : Ethen Campos\\n";\
	cout << "*****************************************************************\\n";\
\}\
\
int beginGame(int usedBoards[])\
\{\
    int randomNum;\
    srand(time(0));\
    do\{\
        randomNum = rand() % 3;\
    \}while (usedBoards[0] != 0 || usedBoards[1] != 0 || usedBoards[2] != 0);\
    return randomNum;\
\}\
\
void displayBoard(int board[][3])\
\{\
    for (int x = 0; x < 4; x++)\
    \{\
        for (int y = 0; y < 3; y++)\
        \{\
            cout << setw(4) << board[x][y] << " ";\
        \}\
        cout << endl;\
    \}\
\}\
\
bool testWinner(int ans, int boardNum, int ansBoard[])\{\
    if (ans == ansBoard[boardNum]) \{\
        cout << endl << "Nice Job!!";\
        return true;\
    	\}\
    else\
    \{\
        cout << endl << "Sorry, that is incorrect";\
        return false;\
    \}\
\}}
